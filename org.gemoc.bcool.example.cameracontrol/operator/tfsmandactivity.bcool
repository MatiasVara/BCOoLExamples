TFSMandfUMLoperators

ImportLib "platform:/resource/org.gemoc.bcool.example.cameracontrol/operator/facilities.bcoollib"
ImportLib "platform:/resource/org.gemoc.bcool.example.cameracontrol/operator/bcoollib.ccslLib"

ImportInterface "platform:/plugin/org.gemoc.sample.tfsm.eclmoc2as/ecl/TFSM-local.ecl" as tfsm
ImportInterface "platform:/resource/org.gemoc.bcool.example.cameracontrol/models/activitySemantics.ecl" as activity

Spec test 

// This operator implements the syncronized product between tfsm and activities
Operator  SyncProduct (action : activity::startAction , fsmevent : tfsm::occurs)
	MatchingCorrespondance: when  action.name = fsmevent.name ;
	CoordinationRule: facilities.RendezVous(action, fsmevent)
end operator; 

//
// The next two operators implements the hierarchical coordination of TFSM and Activity
//
Operator  StateEntering (start : activity::startActivity , enter : tfsm::entering)
	MatchingCorrespondance: when  start.name = enter.onEnterAction ;
	CoordinationRule: facilities.RendezVous(start, enter)
end operator; 

Operator  StateLeaving (finish : activity::finishActivity , leave : tfsm::leaving)
	MatchingCorrespondance: when  finish.name = leave.onEnterAction ;
	CoordinationRule: facilities.Causality(finish,leave)
end operator; 

// This operator implements the coordination of time between an Activity and a TFSM
Operator  TimeinActivity (startAct : activity::startActivity, finishAct : activity::finishActivity , entered : tfsm::entering, local : tfsm::ticks)
	MatchingCorrespondance: when  (startAct.name = finishAct.name) and (entered.onEnterAction = startAct.name) and (local.name = entered.owningFSM.localClock.name);
	CoordinationRule: 
		Local Event sampled = facilities.SampledBy (startAct,local);
	facilities.Causality(finishAct,sampled)
end operator; 

